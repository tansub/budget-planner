{"mappings":"A,I,E,W,E,C,E,E,C,E,E,E,iB,A,O,I,A,C,E,S,C,E,G,K,E,O,C,C,E,C,O,C,G,K,E,C,I,E,C,C,E,A,Q,C,C,E,C,I,E,C,G,E,Q,C,C,E,O,C,C,E,C,E,E,I,C,E,O,C,E,E,O,E,E,O,A,C,I,E,A,M,uB,E,I,O,E,I,C,mB,C,C,E,Q,C,S,C,C,C,E,C,C,E,C,C,E,E,iB,C,G,E,Q,C,I,E,E,S,E,E,SCMA,eAAe,IACb,IAAM,EAAqB,AAAA,CAAA,EAAA,EAAA,UAAS,AAAT,EAAW,EAAA,EAAC,CAAG,YACpC,EAAmB,MAAM,AAAA,CAAA,EAAA,EAAA,OAAM,AAAN,EAAQ,GAEnC,EAAW,EAAE,CAKjB,OAJA,EAAiB,OAAO,CAAC,AAAC,IACxB,EAAS,IAAI,CAAC,EAAI,IAAI,GACxB,GAEO,CACT,CAQA,eAAe,IACb,IAAI,EAAW,MAAM,IAEjB,EAAiB,CAAC,EACtB,EAAS,OAAO,CAAC,AAAC,IAChB,CAAc,CAAC,EAAQ,QAAQ,CAAC,CAC7B,AAAA,CAAA,CAAc,CAAC,EAAQ,QAAQ,CAAC,EAAI,CAAA,EAAK,EAAQ,MAAM,AAC5D,GAEA,IAAI,EAAa,OAAO,IAAI,CAAC,GACzB,EAAU,OAAO,MAAM,CAAC,GAG5B,IAAI,MADM,SAAS,cAAc,CAAC,iBAAiB,UAAU,CAAC,MAC/C,CACb,KAAM,MAEN,KAAM,CACJ,OAAQ,EACR,SAAU,CACR,CACE,MAAO,uBACP,KAAM,EACN,gBAAiB,CAAC,UAAW,UAAW,UAAW,UAAU,AAC/D,EACD,AACH,CACF,EACF,CAEA,eAAe,IACb,IAAI,EAAW,MAAM,IACjB,EAAY,SAAS,cAAc,CAAC,gBACxC,CAAA,EAAU,SAAS,CAAG,GAEtB,EAAS,OAAO,CAAC,AAAC,IAChB,IAAI,EAAc,EAAQ,SAAS,CAAG,IAAI,KAAK,EAAQ,SAAS,EAAI,KAChE,EAAgB,EAChB,EAAY,kBAAkB,CAAC,QAAS,CACtC,KAAM,UACN,MAAO,QACP,IAAK,SACP,GACA,UAEA,EAAM,SAAS,aAAa,CAAC,KACjC,CAAA,EAAI,SAAS,CAAG;AACJ,gBAAA,EAAE,EAAQ,KAAK,EAAI,UAAU;AAC7B,gBAAA,EAAE,EAAQ,QAAQ,EAAI,gBAAgB;AACrC,iBAAA,EAAE,WAAW,EAAQ,MAAM,EAAI,GAAG,OAAO,CAAC,GAAG;AAC9C,gBAAA,EAAE,EAAc;AACxB,QAAA,CAAC,CACL,EAAU,WAAW,CAAC,EACxB,EACF,CAEA,AA7DA,CAAA,iBAEE,IAAI,EAAQ,AADG,CAAA,MAAM,GAArB,EACqB,MAAM,CAAC,CAAC,EAAK,IAAY,EAAM,EAAQ,MAAM,CAAE,EACpE,CAAA,SAAS,cAAc,CAAC,oBAAoB,WAAW,CAAG,EAAM,OAAO,CAAC,EAC1E,CAAA,IA0DA,IACA","sources":["<anon>","js/summary.js"],"sourcesContent":["\n      var $parcel$global = globalThis;\n    \nvar $parcel$modules = {};\nvar $parcel$inits = {};\n\nvar parcelRequire = $parcel$global[\"parcelRequire94c2\"];\n\nif (parcelRequire == null) {\n  parcelRequire = function(id) {\n    if (id in $parcel$modules) {\n      return $parcel$modules[id].exports;\n    }\n    if (id in $parcel$inits) {\n      var init = $parcel$inits[id];\n      delete $parcel$inits[id];\n      var module = {id: id, exports: {}};\n      $parcel$modules[id] = module;\n      init.call(module.exports, module, module.exports);\n      return module.exports;\n    }\n    var err = new Error(\"Cannot find module '\" + id + \"'\");\n    err.code = 'MODULE_NOT_FOUND';\n    throw err;\n  };\n\n  parcelRequire.register = function register(id, init) {\n    $parcel$inits[id] = init;\n  };\n\n  $parcel$global[\"parcelRequire94c2\"] = parcelRequire;\n}\n\nvar parcelRegister = parcelRequire.register;\n\nvar $gEjZb = parcelRequire(\"gEjZb\");\n\nvar $ilpIi = parcelRequire(\"ilpIi\");\nasync function $9cf295870d1fdb24$var$fetchExpenses() {\n    const expensesCollection = (0, $ilpIi.collection)((0, $gEjZb.db), \"expenses\");\n    const expensesSnapshot = await (0, $ilpIi.getDocs)(expensesCollection);\n    let expenses = [];\n    expensesSnapshot.forEach((doc)=>{\n        expenses.push(doc.data());\n    });\n    return expenses;\n}\nasync function $9cf295870d1fdb24$var$updateMonthlySpending() {\n    let expenses = await $9cf295870d1fdb24$var$fetchExpenses();\n    let total = expenses.reduce((sum, expense)=>sum + expense.amount, 0);\n    document.getElementById(\"monthly-spending\").textContent = total.toFixed(2);\n}\nasync function $9cf295870d1fdb24$var$updateCategoryChart() {\n    let expenses = await $9cf295870d1fdb24$var$fetchExpenses();\n    let categoryTotals = {};\n    expenses.forEach((expense)=>{\n        categoryTotals[expense.category] = (categoryTotals[expense.category] || 0) + expense.amount;\n    });\n    let categories = Object.keys(categoryTotals);\n    let amounts = Object.values(categoryTotals);\n    let ctx = document.getElementById(\"categoryChart\").getContext(\"2d\");\n    new Chart(ctx, {\n        type: \"pie\",\n        data: {\n            labels: categories,\n            datasets: [\n                {\n                    label: \"Spending by Category\",\n                    data: amounts,\n                    backgroundColor: [\n                        \"#FF6384\",\n                        \"#36A2EB\",\n                        \"#FFCE56\",\n                        \"#4CAF50\"\n                    ]\n                }\n            ]\n        }\n    });\n}\nasync function $9cf295870d1fdb24$var$populateExpenseTable() {\n    let expenses = await $9cf295870d1fdb24$var$fetchExpenses();\n    let tableBody = document.getElementById(\"expense-table\");\n    tableBody.innerHTML = \"\";\n    expenses.forEach((expense)=>{\n        let expenseDate = expense.createdAt ? new Date(expense.createdAt) : null;\n        let formattedDate = expenseDate ? expenseDate.toLocaleDateString(\"en-US\", {\n            year: \"numeric\",\n            month: \"short\",\n            day: \"numeric\"\n        }) : \"No Date\";\n        let row = document.createElement(\"tr\");\n        row.innerHTML = `\n            <td>${expense.title || \"Unknown\"}</td>\n            <td>${expense.category || \"Uncategorized\"}</td>\n            <td>$${parseFloat(expense.amount || 0).toFixed(2)}</td>\n            <td>${formattedDate}</td>\n        `;\n        tableBody.appendChild(row);\n    });\n}\n$9cf295870d1fdb24$var$updateMonthlySpending();\n$9cf295870d1fdb24$var$updateCategoryChart();\n$9cf295870d1fdb24$var$populateExpenseTable();\n\n\n//# sourceMappingURL=summary.a3fa8cbf.js.map\n","import { db } from \"./firebase.js\";\nimport {\n  getDocs,\n  collection,\n} from \"firebase/firestore\";\n\nasync function fetchExpenses() {\n  const expensesCollection = collection(db, \"expenses\"); \n  const expensesSnapshot = await getDocs(expensesCollection);\n\n  let expenses = [];\n  expensesSnapshot.forEach((doc) => {\n    expenses.push(doc.data());\n  });\n\n  return expenses;\n}\n\nasync function updateMonthlySpending() {\n  let expenses = await fetchExpenses();\n  let total = expenses.reduce((sum, expense) => sum + expense.amount, 0);\n  document.getElementById(\"monthly-spending\").textContent = total.toFixed(2);\n}\n\nasync function updateCategoryChart() {\n  let expenses = await fetchExpenses();\n\n  let categoryTotals = {};\n  expenses.forEach((expense) => {\n    categoryTotals[expense.category] =\n      (categoryTotals[expense.category] || 0) + expense.amount;\n  });\n\n  let categories = Object.keys(categoryTotals);\n  let amounts = Object.values(categoryTotals);\n\n  let ctx = document.getElementById(\"categoryChart\").getContext(\"2d\");\n  new Chart(ctx, {\n    type: \"pie\",\n\n    data: {\n      labels: categories,\n      datasets: [\n        {\n          label: \"Spending by Category\",\n          data: amounts,\n          backgroundColor: [\"#FF6384\", \"#36A2EB\", \"#FFCE56\", \"#4CAF50\"],\n        },\n      ],\n    },\n  });\n}\n\nasync function populateExpenseTable() {\n  let expenses = await fetchExpenses();\n  let tableBody = document.getElementById(\"expense-table\");\n  tableBody.innerHTML = \"\";\n\n  expenses.forEach((expense) => {\n    let expenseDate = expense.createdAt ? new Date(expense.createdAt) : null;\n    let formattedDate = expenseDate\n      ? expenseDate.toLocaleDateString(\"en-US\", {\n          year: \"numeric\",\n          month: \"short\",\n          day: \"numeric\",\n        })\n      : \"No Date\";\n\n    let row = document.createElement(\"tr\");\n    row.innerHTML = `\n            <td>${expense.title || \"Unknown\"}</td>\n            <td>${expense.category || \"Uncategorized\"}</td>\n            <td>$${parseFloat(expense.amount || 0).toFixed(2)}</td>\n            <td>${formattedDate}</td>\n        `;\n    tableBody.appendChild(row);\n  });\n}\n\nupdateMonthlySpending();\nupdateCategoryChart();\npopulateExpenseTable();\n"],"names":["$parcel$global","globalThis","$parcel$modules","$parcel$inits","parcelRequire","id","exports","init","module","call","err","Error","code","register","$gEjZb","$ilpIi","$9cf295870d1fdb24$var$fetchExpenses","expensesCollection","collection","db","expensesSnapshot","getDocs","expenses","forEach","doc","push","data","$9cf295870d1fdb24$var$updateCategoryChart","categoryTotals","expense","category","amount","categories","Object","keys","amounts","values","Chart","document","getElementById","getContext","type","labels","datasets","label","backgroundColor","$9cf295870d1fdb24$var$populateExpenseTable","tableBody","innerHTML","expenseDate","createdAt","Date","formattedDate","toLocaleDateString","year","month","day","row","createElement","title","parseFloat","toFixed","appendChild","$9cf295870d1fdb24$var$updateMonthlySpending","total","reduce","sum","textContent"],"version":3,"file":"summary.a3fa8cbf.js.map"}